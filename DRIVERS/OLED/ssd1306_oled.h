#pragma once

#include <stdint.h>
#include <stdbool.h>

#ifndef SSD1306_ADDR
#define SSD1306_ADDR    0b111100   //oled的地址
#endif
#define IS_CMD          0x00   //命令
#define IS_DATA         0x40   //数据

#define SSD1306_UPDATA  1      //oled更新

#define SSD1306_ROWS 4
#define SSD1306_COLS 128

//开机图标ROW0-ROW1
#define ROW0_1              0  
//所在列
#define Open_X              0   
#define Bluetooth_X         17   
#define Ble_Swich_Air_X     25   
#define Gazell_X            33   
#define USB_X               49   
#define Charge_X            65   
#define CapsLock_X          73   
#define NumLock_X           81   
#define ScrollLock_X        89   
#define Batt_Display_X      97  

//ROW2-ROW3
#define ROW2_3              2 
//所在列 
#define Mode_X              0 
#define Nkro_Six_X          13    
#define Layer_X             21   
#define Layer_Swich_X       33   
#define Modfiy_X            41  
#define Modfiy_Key_X        53   
#define Key_X               69   
#define Key_Press_X         81   
/**
 * @brief 图标的Index
 * 
 */
enum icon_index
{
    ICON_OPEN,
    ICON_BATT_0,
    ICON_BATT_100,
    ICON_CHARGE,
    ICON_BLUETOOTH,
    ICON_BLE_ONE,
    ICON_BLE_TWO,
    ICON_BLE_THR,
    ICON_GAZELL,
    ICON_USB,
    ICON_NUMLOCK_NRKO,
    ICON_CAPSLOCK,
    ICON_SCROLLLOCK_SLOW,
    ICON_AIR,
    ICON_SIXRKO,
    ICON_MODE,
    ICON_LAYER,
    ICON_MODFIY,
    ICON_PRESSKEY,
    ICON_16x16,
    ICON_8x16,
    ICON_FAST,
};

enum ssd1306_commands
{
    SSD1306_SETLOWCOLUMN = 0x00,  //起始列地址低4位
    SSD1306_SETHIGHCOLUMN = 0x10, //起始列地址高4位
    SSD1306_MEMORYMODE = 0x20,    //设置内存地址模式
    SSD1306_COLUMNADDR = 0x21,    //设置列地址
    SSD1306_PAGEADDR = 0x22,      //设置页地址
    SSD1306_SETSTARTLINE = 0x40,  //设置屏幕起始行

    SSD1306_SETCONTRAST = 0x81,         //设置对比度
    SSD1306_CHARGEPUMP = 0x8D,          //开启电荷泵，必须设置1才能显示
    SSD1306_SEGREMAP_RESET = 0xA0,      //设置段重映射0
    SSD1306_SEGREMAP_INVERSE = 0xA1,    //设置段重映射1
    SSD1306_DISPLAYALLON_RESUME = 0xA4, //正常显示
    SSD1306_DISPLAYALLON = 0xA5,        //全屏点亮
    SSD1306_NORMALDISPLAY = 0xA6,       //正常显示
    SSD1306_INVERTDISPLAY = 0xA7,       //反转显示
    SSD1306_SETMULTIPLEX = 0xA8,        //设置复用率
    SSD1306_DISPLAYOFF = 0xAE,          //设置屏幕关闭
    SSD1306_DISPLAYON = 0xAF,           //设置屏幕开启
    SSD1306_PAGESTARTADDR = 0xB0,       //页地址模式下设置页起始地址
    SSD1306_COMSCANINC = 0xC0,          //设置列输出扫描方向，水平
    SSD1306_COMSCANDEC = 0xC8,          //设置列输出扫描方向，垂直

    SSD1306_SETDISPLAYOFFSET = 0xD3,   //设置显示偏移
    SSD1306_SETDISPLAYCLOCKDIV = 0xD5, //设置显示时钟分频值/震荡频率
    SSD1306_SETPRECHARGE = 0xD9,       //设置预充电周期
    SSD1306_SETCOMPINS = 0xDA,         //设置列引脚硬件配置
    SSD1306_SETVCOMDETECT = 0xDB,      //设置VCOMH反压值

    SSD1306_RIGHT_HORIZONTAL_SCROLL = 0x26,              //水平滚动配置右
    SSD1306_LEFT_HORIZONTAL_SCROLL = 0x27,               //水平滚动配置左
    SSD1306_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL = 0x29, //垂直和水平滚动配置
    SSD1306_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL = 0x2A,  //垂直和水平滚动配置
    SSD1306_DEACTIVATE_SCROLL = 0x2E,                    //禁用滚动
    SSD1306_ACTIVATE_SCROLL = 0x2F,                      //启用滚动
    SSD1306_SET_VERTICAL_SCROLL_AREA = 0xA3,             //设置段重映射1
};


extern uint8_t ssd1306_display_buffer[];
extern bool ssd1306_buff_dirty[SSD1306_ROWS];
void update_status_bar(uint8_t row, uint8_t col, enum icon_index type);
void update_status_bar_notify(uint8_t row, uint8_t col, enum icon_index type);
void ssd1306_show_buff(uint8_t row, uint8_t col_start, uint8_t len);
void ssd1306_task_thread (void *p_context);
void ssd1306_oled_init();
void ssd1306_show_all();
void ssd1306_clr();
void ssd1306_sleep();
void ssd1306_wake();

#ifndef SSD1306_INIT_BUFF
#define SSD1306_INIT_BUFF                                                                                  \
    {                                                                                                      \
        0x02, 0x07, 0x27, 0x77, 0xF7, 0xF7, 0xF7, 0xF7, 0xF7, 0xF7, 0xF7, 0xFF, 0x77, 0x13, 0xAF, 0xD7,    \
        0xE7, 0xE7, 0xE7, 0xF7, 0xF7, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xF7, 0xF7, 0xE7, 0xE7,    \
        0xE7, 0xC7, 0xE7, 0xB7, 0xDF, 0x6F, 0x33, 0x17, 0x0F, 0xF7, 0xF7, 0xF7, 0x07, 0x07, 0xF7, 0xF7,    \
        0x07, 0x07, 0x07, 0xF7, 0xF7, 0xF7, 0x37, 0x37, 0x77, 0xE7, 0xC7, 0x87, 0x07, 0x27, 0x67, 0x67,    \
        0xF7, 0xFF, 0xFF, 0xF7, 0x67, 0x67, 0x27, 0x17, 0xF7, 0xF7, 0xF7, 0x77, 0x77, 0x77, 0xF7, 0xF7,    \
        0x07, 0x77, 0xF7, 0xF7, 0xF7, 0xF7, 0xF7, 0xF7, 0xF7, 0xF7, 0xF7, 0x07, 0x07, 0x07, 0x07, 0x37,    \
        0x37, 0x77, 0xF7, 0xF7, 0xF7, 0xF7, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x87, 0x87,    \
        0xC7, 0xE7, 0xE7, 0xF7, 0xFF, 0xFF, 0xF7, 0xE7, 0x87, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x02,    \
        0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0x80, 0x84, 0xC4, 0xE6, 0xF7, 0xFF, 0xFF,    \
        0xFF, 0xFF, 0x7F, 0x7F, 0x3F, 0x3F, 0x3F, 0x1F, 0x1F, 0x1F, 0x3F, 0x3F, 0x3F, 0x7F, 0x7F, 0x7F,    \
        0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xE6, 0x84, 0x04, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF,    \
        0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFC, 0xF0, 0x70, 0x78, 0x3C, 0x1F, 0x0F, 0x00, 0xF8, 0xFC, 0x1F,    \
        0xFF, 0xFF, 0xFF, 0xFF, 0x1E, 0xFC, 0xF8, 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0xC0, 0xF0, 0x00, 0x01,    \
        0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0xC0, 0xE0, 0xF0, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,    \
        0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xC0, 0xC0, 0xE0, 0xF8, 0xFC, 0x7F, 0x0F, 0x07,    \
        0x03, 0x01, 0x01, 0x03, 0x03, 0x07, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0x3E, 0x1C, 0x08, 0x00, 0x00,    \
        0x00, 0x00, 0x00, 0x80, 0xC0, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x1F, 0xFF, 0xFF,    \
        0xFF, 0xF0, 0xE6, 0xCF, 0x9F, 0x9F, 0x8F, 0xB6, 0xB0, 0xB6, 0x8F, 0x9F, 0x9F, 0xCF, 0xCF, 0xE6,    \
        0xF0, 0xFF, 0xFF, 0xFF, 0xBF, 0x0F, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0x80, 0xFF, 0xFF,    \
        0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x07, 0x0F, 0x1F, 0xFE, 0xFC, 0xF8, 0x00, 0x01, 0x0F, 0xFF,    \
        0xFF, 0x7F, 0x7F, 0xFF, 0xFF, 0x0F, 0x01, 0x00, 0xFF, 0xFF, 0xFF, 0x81, 0x81, 0x83, 0xC0, 0xE0,    \
        0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xE1, 0x81, 0x81, 0x83, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x80, 0x80,    \
        0xC0, 0xF0, 0xFE, 0x7F, 0x1F, 0x0F, 0x07, 0xFF, 0xFF, 0x3F, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00,    \
        0x00, 0x00, 0x00, 0xC0, 0xF0, 0xFC, 0x7F, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    \
        0x10, 0x38, 0x39, 0x39, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x38, 0x38, 0x3C, 0x3A, 0x72, 0xFD, 0xFE,    \
        0x7F, 0x3B, 0x39, 0x3F, 0x3F, 0x3A, 0x37, 0x3A, 0x37, 0x3A, 0x37, 0x3A, 0x3F, 0x3F, 0x3F, 0x3F,    \
        0x39, 0x3B, 0x3F, 0x7E, 0x7D, 0xF3, 0xFA, 0xFE, 0x78, 0x38, 0x39, 0x3B, 0x3F, 0x3F, 0x3B, 0x38,    \
        0x38, 0x78, 0xF8, 0xFB, 0xFB, 0x7B, 0x38, 0x38, 0x38, 0x3B, 0x3B, 0x3B, 0x38, 0x3C, 0x3F, 0x3D,    \
        0x38, 0x38, 0x38, 0x78, 0xF9, 0xFB, 0xF8, 0x7A, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3F, 0x3F, 0x3B,    \
        0x38, 0x3B, 0x7B, 0xFB, 0xFB, 0xFB, 0x7B, 0x3B, 0x3B, 0x3B, 0x3B, 0x38, 0x38, 0x3B, 0x3F, 0x3F,    \
        0x3F, 0x39, 0x38, 0x38, 0x78, 0x78, 0xF8, 0xDB, 0xD8, 0x98, 0x98, 0x98, 0xD8, 0xF8, 0x78, 0x38,    \
        0x38, 0x3E, 0x3F, 0x3F, 0x3B, 0x39, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x10,    \
}    
#endif    
    